# STAR ribodepletion — STAR 2.6.1d — human_rRNA_genome (genome release 92)
# STAR alignment — STAR 2.7.3a — release 98 
# HT-seq feature count - GRCh38.98 ( version 0.11.1)

#### ii) Prelude 

library("edgeR")
packageVersion("edgeR")
# [1] ‘3.42.4’
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library(NOISeq)
packageVersion("NOISeq")
# [1] ‘2.44.0’
library(dplyr)
packageVersion("dplyr")
# [1] ‘1.1.3’
library("gdata")
packageVersion("gdata")
# [1] ‘3.0.0’
library("readxl")
packageVersion("readxl")
#[1] ‘1.4.3’


library(dplyr)
packageVersion("dplyr")
# [1] ‘1.1.3’
library(edgeR)
packageVersion("edgeR")
# [1] ‘3.42.4’
library(limma)
packageVersion("limma")
# [1] ‘3.56.2’
library("ggrepel")
packageVersion("ggrepel")
# [1] ‘0.9.4’
require(gridExtra)
packageVersion("gridExtra")
# [1] ‘2.3’


#### ii) Compile count data #### 

# Take 'all' htseq-count results and melt them in to one big dataframe

# where are we?
basedir <- here::here("BRC_COVID_omic_pilot") # can edit this to makes the directory with count data
setwd(basedir)

cntdir <- paste(basedir, "count", sep="/")
pat <- "HTseq.count"
star.all <- list.files(path = cntdir,
                       pattern = pat,
                       all.files = TRUE,
                       recursive = FALSE,
                       ignore.case = FALSE,
                       include.dirs = FALSE)

# we choose the 'all' series
myfiles <- star.all
DT <- list()

# read each file as array element of DT and rename the last 2 cols
# we created a list of single sample tables
for (i in 1:length(myfiles) ) {
  infile = paste(cntdir, myfiles[i], sep = "/")
  DT[[myfiles[i]]] <- read.table(infile, header = F, stringsAsFactors = FALSE)
  cnts <- gsub("(.*)HTseq.count", "\\1", myfiles[i])
  colnames(DT[[myfiles[i]]]) <- c("ID", cnts)
}

# merge all elements based on first ID columns
data <- DT[[myfiles[1]]]


# we now add each other table with the ID column as key
for (i in 2:length(myfiles)) {
  y <- DT[[myfiles[i]]]
  z <- merge(data, y, by = c("ID"))
  data <- z
}

# ID column becomes rownames
rownames(data) <- data$ID
data <- data[,-1]

## add total counts per sample
data <- rbind(data, tot.counts=colSums(data))



# take all data rows to a new table

data.all <- data[grep("^ENS", rownames(data), perl=TRUE, invert=FALSE), ]

# final merged table
dim(data.all)
# [1] 60623    58

# write.csv(data.all, file = paste0(basedir, "BRC_omics_RNA-seq_STAR_HTSeq_", Sys.Date(), ".csv")) # write count tables




#### 0) Prelude and QC #####

#### 0b) SEQUENCING DATA LOADING & CLEANING #####


sd <- DGEList(counts=read.csv(paste0(here::here("BRC_COVID_omic_pilot"),"/","BRC_omics_RNA-seq_STAR_HTSeq_2021-03-15.csv"), row.names = 1)) #  count data from STAR HTSeq #

dim(sd)
# 60623    58
mean(apply(sd$counts, 2, sum))
# 18404922

sd$samples$lib.size <- colSums(sd$counts)
sd <- calcNormFactors(sd, method="TMM")

sd$samples$ID<- substr(rownames(sd$samples), 2,9)

sample_info <- read_excel("/mnt/sdb/BRC_COVID_omic_pilot/COVID_multiomics_metadata.xlsx",skip = 43, sheet = "Illumina RNA seq" )[1:180,]

sample_info$ID <- substr(sample_info$`library name`, 7,15)


sd$samples <- merge(sd$samples,sample_info[,c("library name","title","timepoint","Vaccine", "NAAT result", "Participant number", "ID")], by.x ="ID", by.y= "ID") %>% rename(  participant_ID =`Participant number`, randomisation_group= Vaccine , NAAT_result=`NAAT result` )

rownames(sd$samples) <- sd$samples$`library name`



library(biomaRt)

mart=useMart("ensembl",host="http://sep2019.archive.ensembl.org", dataset = "hsapiens_gene_ensembl")

searchDatasets(mart = mart, pattern = "hsapiens")
#                  dataset              description    version
# 85 hsapiens_gene_ensembl Human genes (GRCh38.p13) GRCh38.p13
ensembl <- useEnsembl(biomart = "ENSEMBL_MART_ENSEMBL", dataset = "hsapiens_gene_ensembl" )
ensembl <- useDataset(dataset = "hsapiens_gene_ensembl", mart = mart)
attributes = listAttributes(ensembl)
selected_attributes <- c( "ensembl_gene_id", "entrezgene_id", "gene_biotype", "external_gene_name", "transcript_length", "chromosome_name")
gene_metadata1 = getBM(attributes = selected_attributes, mart = ensembl) #downloads data

dim(gene_metadata1)
# [1] 248799      6
gene_metadata1 = dplyr::select(gene_metadata1,ensembl_gene_id, gene_biotype, external_gene_name, chromosome_name  ) %>% unique() #subselection of the metaData (geneIDs, geneNames, biotype)

rownames(gene_metadata1)= gene_metadata1$ensembl_gene_id

dim(gene_metadata1)
#[1] 67087     4


# #### 0c) CLEAN RAW COUNT TABLE ####

gene_metadata_STAR_HTSeq = gene_metadata1[  rownames(sd), ]

stopifnot(identical(as.character(rownames(sd)), as.character(rownames(gene_metadata_STAR_HTSeq))))

gend_star_HTSeq = gene_metadata_STAR_HTSeq$ensembl_gene_id[ -which(gene_metadata_STAR_HTSeq$chromosome_name == "X" | gene_metadata_STAR_HTSeq$chromosome_name == "Y")] # remove sex chromosomes


gend_gene_metadata_STAR_HTSeq = gene_metadata_STAR_HTSeq[ -which(gene_metadata_STAR_HTSeq$chromosome_name == "X" | gene_metadata_STAR_HTSeq$chromosome_name == "Y"),] 

sd2_star_HTSeq_autosomes = sd[ gend_star_HTSeq, ] #select autosomes

dim(sd2_star_HTSeq_autosomes) # 57678    58

stopifnot(identical(rownames(sd2_star_HTSeq_autosomes), rownames(gend_gene_metadata_STAR_HTSeq)))

sd2_star_HTSeq_autosomes$Gene <- gend_gene_metadata_STAR_HTSeq


sd2_star_HTSeq_autosomes$samples$lib.size = colSums(sd2_star_HTSeq_autosomes$counts)# re-compute library size

mean(sd2_star_HTSeq_autosomes$samples$lib.size)
# 17863942 
# # normalization - effective library size - sample specific normalization factors
sd2_star_HTSeq_autosomes = calcNormFactors(sd2_star_HTSeq_autosomes, method = "TMM") #


dim(sd2_star_HTSeq_autosomes)
# [1] 57678    58


#### 1) Filter transcripts #####
# Filter by gene expression level (remove noise)

dim(sd2_star_HTSeq_autosomes)
#[1] 57678    58

sd2_star_HTSeq_autosomes$metadata <- sd2_star_HTSeq_autosomes$samples



#table(sd2_star_HTSeq_autosomes$metadata$timepoint)

# CT CT+7   D0 
# 29   19   10 

# table(sd2_star_HTSeq_autosomes$metadata$randomisation_group)
# ChAdOx1 MenACWY 
# 26      32 

## table(sd2_star_HTSeq_autosomes$metadata$NAAT_result)
# 0  1 
# 27 31 

keep <- rowSums(cpm(sd2_star_HTSeq_autosomes)>3, na.rm=T) >= 9

table(keep)
# FALSE  TRUE 
# 44212 13466  
sd2_star_HTSeq_autosomes.filtered <- sd2_star_HTSeq_autosomes[keep,]
dim(sd2_star_HTSeq_autosomes.filtered)
#[1] 13466    58

sd2_star_HTSeq_autosomes.filtered$Gene <- sd2_star_HTSeq_autosomes.filtered$Gene[rownames(sd2_star_HTSeq_autosomes.filtered$counts),]

sd2_star_HTSeq_autosomes.filtered$genes <- sd2_star_HTSeq_autosomes.filtered$Gene
sd2_star_HTSeq_autosomes.filtered$genes$GeneID <- sd2_star_HTSeq_autosomes.filtered$Gene$gene_name


# # Filter 1 ----
sd2_star_HTSeq_autosomes.filtered$samples$lib.size <- colSums(sd2_star_HTSeq_autosomes.filtered$counts)
sd2_star_HTSeq_autosomes.filtered <- calcNormFactors(sd2_star_HTSeq_autosomes.filtered)




# Remove Mt_rRNA and globins
sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins <- sd2_star_HTSeq_autosomes.filtered[-grep("Mt_|rRNA", sd2_star_HTSeq_autosomes.filtered$Gene$gene_biotype),]
sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$Gene <- sd2_star_HTSeq_autosomes.filtered$Gene[-grep("Mt_|rRNA", sd2_star_HTSeq_autosomes.filtered$Gene$gene_biotype),]
sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins <- sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins[-grep("HBB|HBA1|HBA2|HBG1|HBG2", sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$Gene$external_gene_name),]

sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$Gene <- sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$Gene[-grep("HBB|HBA1|HBA2|HBG1|HBG2", sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$Gene$external_gene_name),]

sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$lib.size <- colSums(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$counts)
sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins <- calcNormFactors(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins)



dim(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins)
# [1] 13457    58



# QC ----


## Density plots ----
library(viridis)
col <- viridis (n=58)
unfiltered_lcpm <- cpm(sd2_star_HTSeq_autosomes, log=TRUE)

pdf( paste0(here::here("BRC_COVID_omic_pilot"),"/Stage1_Density_plot_", Sys.Date(),".pdf"), height = 8, width = 12)

par(mfrow=c(1,2))
plot(density(unfiltered_lcpm[,1]), col=col[1], lwd=2, las=2, main="", xlab="")
title(main="A. Raw data", xlab="Log-cpm")
for (i in 2:ncol(sd2_star_HTSeq_autosomes)){
  den <- density(unfiltered_lcpm[,i])
  lines(den$x, den$y, col=col[i], lwd=2)
}
lcpm <- cpm(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins, log=TRUE)
plot(density(lcpm[,1]), col=col[1], lwd=2, ylim=c(0,0.26), las=2, main="", xlab="")
title(main="B. Filtered data", xlab="Log-cpm")
for (i in 2:ncol(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins)){
  den <- density(lcpm[,i])
  lines(den$x, den$y, col=col[i], lwd=2)
}
dev.off()


#### 2) DE genes  ####

## Limma ----

# i) Contrast matrix ----


#dim(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins)
## [1] 13457    58


## table(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result)
# 0  1 
# 27 31 


table((sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata %>% 
         dplyr::filter(! duplicated(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$participant_ID)))[,"NAAT_result"] )

# 0  1 
# 13 16 


table((sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata %>% 
         dplyr::filter(! duplicated(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$participant_ID)))[,"randomisation_group"] )

# ChAdOx1 MenACWY 
# 12      17 


sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint<- factor(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint,levels = c("D0", "CT", "CT+7") )


sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group = model.matrix(~ -1 + paste(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$randomisation_group,sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result, sep="_") )



colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group) <- gsub("paste(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$randomisation_group, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result, sep = \"_\")", "" ,colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group), fixed=T)

sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom <- voom(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group , plot=FALSE)


colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group) <- gsub("CT\\+7","CTplus7",colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group))

vfit_grp <- lmFit(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group)


symp_contrast <- makeContrasts(D0_CT_all_groups = (CT_ChAdOx1_1 + CT_MenACWY_1+ CT_ChAdOx1_0 + CT_MenACWY_0)/4-(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0 + D0_MenACWY_1)/4, D0_CT7_all_groups =(CTplus7_ChAdOx1_1 + CTplus7_MenACWY_1+ CTplus7_ChAdOx1_0 + CTplus7_MenACWY_0)/4-(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0 + D0_MenACWY_1)/4, CT7_CT_all_groups =(CTplus7_ChAdOx1_1 + CTplus7_MenACWY_1+ CTplus7_ChAdOx1_0 + CTplus7_MenACWY_0)-(CT_ChAdOx1_1 + CT_MenACWY_1+ CT_ChAdOx1_0 + CT_MenACWY_0), D0_CT_PCRpos = (CT_ChAdOx1_1 + CT_MenACWY_1)/2-(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0 + D0_MenACWY_1 )/4, D0_CT7_PCRpos =(CTplus7_ChAdOx1_1 + CTplus7_MenACWY_1)/2-(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0+ D0_MenACWY_1)/4, CT_CT7_PCRpos =(CTplus7_ChAdOx1_1 + CTplus7_MenACWY_1)-(CT_ChAdOx1_1 + CT_MenACWY_1), D0_CT_PCRneg =(CT_ChAdOx1_0 + CT_MenACWY_0)/2-(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0+ D0_MenACWY_1)/4, D0_CT7_PCRneg =(CTplus7_ChAdOx1_0 + CTplus7_MenACWY_0)/2-(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0 + D0_MenACWY_1)/4, CT7_CT_PCRneg =(CTplus7_ChAdOx1_0 + CTplus7_MenACWY_0)-(CT_ChAdOx1_0 + CT_MenACWY_0), compare_PCRpos_vs_PCRneg_CT = (CT_ChAdOx1_1 + CT_MenACWY_1)/2 - (CT_ChAdOx1_0 + CT_MenACWY_0)/2,compare_PCRposChAdOx1_vs_PCRneg_CT = (CT_ChAdOx1_1 ) - (CT_ChAdOx1_0 + CT_MenACWY_0)/2,compare_PCRposMenACWY_vs_PCRneg_CT = (CT_MenACWY_1 ) - (CT_ChAdOx1_0 + CT_MenACWY_0)/2, D0_CT_ChAdOx_PCRpos = (CT_ChAdOx1_1) -(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0 + D0_MenACWY_1)/4, D0_CT7_ChAdOx_PCRpos = (CTplus7_ChAdOx1_1) -(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0 + D0_MenACWY_1)/4,CT_CT7_ChAdOxPCRpos = (CTplus7_ChAdOx1_1) - (CT_ChAdOx1_1),CT_CT7_MENACWYPCRpos=(CTplus7_MenACWY_1) - (CT_MenACWY_1), D0_CT_MENACWY_PCRpos =  (CT_MenACWY_1) -(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0 +D0_MenACWY_1 )/4, D0_CT7_MENACWY_PCRpos = (CTplus7_MenACWY_1) -(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0 + D0_MenACWY_1)/4 , compare_ChAdOx_vs_MENACWY_CT_PCRpos = (CT_ChAdOx1_1) -(CT_MenACWY_1), compare_ChAdOx_vs_MENACWY_CT7_PCRpos = (CTplus7_ChAdOx1_1) -(CTplus7_MenACWY_1),compare_PCRpos_vs_PCRneg_CT7 = (CTplus7_ChAdOx1_1 + CTplus7_MenACWY_1)/2 - (CTplus7_ChAdOx1_0 + CTplus7_MenACWY_0)/2,compare_PCRposChAdOx1_vs_PCRneg_CT7 = (CTplus7_ChAdOx1_1 ) - (CTplus7_ChAdOx1_0 + CTplus7_MenACWY_0)/2,compare_PCRposMenACWY_vs_PCRneg_CT7 = (CTplus7_MenACWY_1 ) - (CTplus7_ChAdOx1_0 + CTplus7_MenACWY_0)/2 , levels=sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group )


vfit_grp <- contrasts.fit(vfit_grp, contrasts=symp_contrast)
efit_grp <- eBayes(vfit_grp)

dt_grp <- decideTests(efit_grp)

# summary(dt_grp)


# for (i in colnames(symp_contrast))
# {
#   write.table(topTable(efit_grp, coef=i, sort.by="P", adjust='fdr', number=nrow(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom)), paste0(here::here("BRC_COVID_omic_pilot"),"/", i,"_Table_of_collapsed_gene_results_STAR_HTSeq_limma_paired_grch38_", Sys.Date(),".txt"), col.names=TRUE,row.names=FALSE,sep="\t",quote=FALSE)
# }


# 2b) Volcano plots ----
# 
# 



for (i in colnames(efit_grp$coefficients)) {
  pq = as.data.frame(topTable(efit_grp, coef=i, sort.by="P", adjust='fdr', number=nrow(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom)))
  #rownames(pq) <- get(i)$gene_id
  p.cut =0.05
  lfc.cut = 0
  vFC = lfc.cut
  pq$col = ifelse (pq$adj.P.Val < p.cut & pq$logFC > lfc.cut, "1", ifelse(pq$adj.P.Val < p.cut & pq$logFC < -lfc.cut, "2" ,"3"))
  pq$alpha = ifelse (pq$col == 1 | pq$col == 2, 1, 0.5)
  x_title         <- c( expression("log" [2]*" FC"))
  y_title         <- c(expression("-log"[10]*" (p-value)"))
  xlims = max(abs(pq$logFC)) +1
  volc = ggplot(data = pq, aes(logFC, -log10(P.Value), color = col)) +
    geom_point(size = 2, show.legend = F) + 
    scale_color_manual(values = c("1" = "red", "2" = "blue", "3" = "grey")) + 
    geom_vline(xintercept = c(-vFC, vFC), lty=3) + 
    xlim(-8, 8) + 
    ylim(0, 12) + 
    labs(title = gsub("D1_","D1_vs_", i)) + 
    xlab(x_title) + 
    ylab(y_title) + 
    theme(axis.text=element_text(color = "black", size = 15), axis.title=element_text(size=18, face="plain"), plot.title=element_text(size = 14,face="bold"),  panel.border = element_rect(fill="NA", colour = "black", size = 0.5), axis.line = element_blank(), axis.ticks = element_line(color="black", size = 0.5), panel.background = element_rect(fill='white', colour='black')) +
    geom_text_repel(data=head(pq, 20), aes(label=external_gene_name), show.legend = FALSE) #+ coord_fixed(ratio = 0.4)
  ggsave( paste0(here::here("BRC_COVID_omic_pilot"),"/","Fixed_axis_Volcano_",i,".png"), plot=volc, height = 7, width = 5)
}


# 1ci) Dot plots for some genes of interest ----


dot_plots_ChAdOx_vs_MenACWY_D7_PCRpos <- NULL

for (i in as.character(read.delim("/mnt/sdb/BRC_COVID_omic_pilot/RScripts/analysis_version_1.0/output/limma/filter1/BRC_COVID_omicscompare_ChAdOx_vs_MENACWY_CT_PCRpos_Table_of_collapsed_gene_results_STAR_HTSeq_limma_paired_grch38_2022-02-05.txt", sep = "\t" )[1:16,"external_gene_name"])) {
  dot_plots_ChAdOx_vs_MenACWY_D7_PCRpos[[i]] = ggplot(as.data.frame(t(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom$E)), aes_(colour=as.factor(ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint=="D0","Baseline", sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata[,"randomisation_group"])), y=as.data.frame(t(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom$E))[,sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$genes$external_gene_name==i], x=factor(gsub("D0_NAAT_neg","D0", gsub("D0_NAAT_pos","D0", paste0(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint, "_" ,sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result))), levels = c("D0","CT_NAAT_neg", "CT_NAAT_pos", "CT+7_NAAT_neg", "CT+7_NAAT_pos" )))) +
    geom_point(position =position_jitterdodge(jitter.width = .5,jitter.height = 0, dodge.width = 0.75), alpha=0.9, size=0.35, stroke=0.2, aes_(group=as.factor(ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint=="D0","Baseline", sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata[,"randomisation_group"])), shape=as.factor(ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint=="D0","Baseline", sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata[,"vaccine_status"]))) )+ 
    geom_boxplot(alpha = 0.1, outlier.shape = NA, size=0.1) +
    theme_bw() +
    theme(legend.title=element_blank(), text = element_text(size=4), axis.text.x = element_text(angle = 45, hjust = 1)) +
    theme(legend.position="none", legend.text=element_text(size=7), legend.key = element_blank()) +
    labs( subtitle = i, x= "Timepoint",y= "Expression (E value)") + scale_color_manual(values = c("#808080", "#FF0000", "#1589FF")) + scale_shape_manual(values=c(4, 19, 2))
  
  #+ scale_shape_manual(values=c(4, 19, 1))
  # 
}


margin = theme(plot.margin=unit(c(0.1,0.2,0,.1),"cm"),plot.title=element_text(margin=margin(b=0), size = 20), plot.subtitle=element_text(margin=margin(t=0, b = 0)) )


combine_dot_plots_ChAdOx_vs_MenACWY_D7_PCRpos <- rbind( cbind(tableGrob(c("", "","",""), theme = ttheme_minimal(base_size=1)),  grid.arrange(grobs=lapply(dot_plots_ChAdOx_vs_MenACWY_D7_PCRpos, "+", margin), limitsize=TRUE, nrow = 5, ncol = 4, top = NULL, layout_matrix = rbind(c(1,2,3,4), c(5,6,7,8),c(9,10,11,12), c(13,14,15,16))),  size = "last"), size = "last")


# ggsave(paste0("/mnt/sdb/BRC_COVID_omic_pilot/RScripts/analysis_version_1.0/output/limma/filter1/dot_plots/Dot_plots_top_DEGs_ChAdOx_vs_MenACWY_D7_PCRpos_",Sys.Date(),".png"),plot=combine_dot_plots_ChAdOx_vs_MenACWY_D7_PCRpos, device ="png" , width = 6,height = 6) #







# 1cii) Dot plots for some more genes of interest ----


dot_plot_PCRpos_vs_PCRneg_CT <- NULL

for (i in as.character(read.delim("/mnt/sdb/BRC_COVID_omic_pilot/RScripts/analysis_version_1.0/output/limma/filter1/BRC_COVID_omicscompare_PCRpos_vs_PCRneg_CT_Table_of_collapsed_gene_results_STAR_HTSeq_limma_paired_grch38_2022-02-05.txt", sep = "\t" )[1:16,"external_gene_name"])) {
  dot_plot_PCRpos_vs_PCRneg_CT[[i]] = ggplot(as.data.frame(t(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom$E)), aes_(colour=as.factor(ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint=="D0","Baseline", sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata[,"randomisation_group"])), y=as.data.frame(t(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom$E))[,sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$genes$external_gene_name==i], x=factor(gsub("D0_NAAT_neg","D0", gsub("D0_NAAT_pos","D0", paste0(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint, "_" ,sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result))), levels = c("D0","CT_NAAT_neg", "CT_NAAT_pos", "CT+7_NAAT_neg", "CT+7_NAAT_pos" )))) +
    geom_point(position =position_jitterdodge(jitter.width = .5,jitter.height = 0, dodge.width = 0.75), alpha=0.9, size=0.35, stroke=0.2, aes_(group=as.factor(ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint=="D0","Baseline", sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata[,"randomisation_group"])), shape=as.factor(ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint=="D0","Baseline", sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata[,"vaccine_status"]))) )+ 
    geom_boxplot(alpha = 0.1, outlier.shape = NA, size=0.1) +
    theme_bw() +
    theme(legend.title=element_blank(), text = element_text(size=4), axis.text.x = element_text(angle = 45, hjust = 1)) +
    theme(legend.position="none", legend.text=element_text(size=7), legend.key = element_blank()) +
    labs( subtitle = i, x= "Timepoint",y= "Expression (E value)") + scale_color_manual(values = c("#808080", "#FF0000", "#1589FF")) + scale_shape_manual(values=c(4, 19, 2))
  
  #+ scale_shape_manual(values=c(4, 19, 1))
  # 
}


margin = theme(plot.margin=unit(c(0.1,0.2,0,.1),"cm"),plot.title=element_text(margin=margin(b=0), size = 20), plot.subtitle=element_text(margin=margin(t=0, b = 0)) )


combine_dot_plot_PCRpos_vs_PCRneg_CT <- rbind( cbind(tableGrob(c("", "","",""), theme = ttheme_minimal(base_size=1)),  grid.arrange(grobs=lapply(dot_plot_PCRpos_vs_PCRneg_CT, "+", margin), limitsize=TRUE, nrow = 5, ncol = 4, top = NULL, layout_matrix = rbind(c(1,2,3,4), c(5,6,7,8),c(9,10,11,12), c(13,14,15,16))),  size = "last"), size = "last")


# ggsave(paste0("/mnt/sdb/BRC_COVID_omic_pilot/RScripts/analysis_version_1.0/output/limma/filter1/dot_plots/Dot_plots_top_DEGs_PCRpos_vs_PCRneg_",Sys.Date(),".png"),plot=combine_dot_plot_PCRpos_vs_PCRneg_CT, device ="png" , width = 6,height = 6) #


# stage 2 leading DEGs

Follow_on_dot_plot_PCRpos_vs_PCRneg_CT <- NULL


top_follow_on <- as.character(read.delim("/mnt/sdb/COVID_omics_follow_up/RScripts/analysis_version_1.0/output/limma/filter1/COVID_omics_follow_upcompare_ChAdOx_vs_MENACWY_CT_PCRpos_Table_of_collapsed_gene_results_STAR_HTSeq_limma_paired_grch38_2021-12-09.txt", sep = "\t" )[1:17,"external_gene_name"])[as.character(read.delim("/mnt/sdb/COVID_omics_follow_up/RScripts/analysis_version_1.0/output/limma/filter1/COVID_omics_follow_upcompare_ChAdOx_vs_MENACWY_CT_PCRpos_Table_of_collapsed_gene_results_STAR_HTSeq_limma_paired_grch38_2021-12-09.txt", sep = "\t" )[1:17,"external_gene_name"]) %in% sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$genes$external_gene_name]



for (i in top_follow_on) {
  Follow_on_dot_plot_PCRpos_vs_PCRneg_CT[[i]] = ggplot(as.data.frame(t(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom$E)), aes_(colour=as.factor(ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint=="D0","Baseline", sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata[,"randomisation_group"])), y=as.data.frame(t(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom$E))[,sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$genes$external_gene_name==i], x=factor(gsub("D0_NAAT_neg","D0", gsub("D0_NAAT_pos","D0", paste0(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint, "_" ,sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result))), levels = c("D0","CT_NAAT_neg", "CT_NAAT_pos", "CT+7_NAAT_neg", "CT+7_NAAT_pos" )))) +
    geom_point(position =position_jitterdodge(jitter.width = .5,jitter.height = 0, dodge.width = 0.75), alpha=0.9, size=0.35, stroke=0.2, aes_(group=as.factor(ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint=="D0","Baseline", sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata[,"randomisation_group"])), shape=as.factor(ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint=="D0","Baseline", sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata[,"vaccine_status"]))) )+ 
    geom_boxplot(alpha = 0.1, outlier.shape = NA, size=0.1) +
    theme_bw() +
    theme(legend.title=element_blank(), text = element_text(size=4), axis.text.x = element_text(angle = 45, hjust = 1)) +
    theme(legend.position="none", legend.text=element_text(size=7), legend.key = element_blank()) +
    labs( subtitle = i, x= "Timepoint",y= "Expression (E value)") + scale_color_manual(values = c("#808080", "#FF0000", "#1589FF")) + scale_shape_manual(values=c(4, 19, 2))
  
  #+ scale_shape_manual(values=c(4, 19, 1))
  # 
}


margin = theme(plot.margin=unit(c(0.1,0.2,0,.1),"cm"),plot.title=element_text(margin=margin(b=0), size = 20), plot.subtitle=element_text(margin=margin(t=0, b = 0)) )


combine_Follow_on_dot_plot_PCRpos_vs_PCRneg_CT <- rbind( cbind(tableGrob(c("", "","",""), theme = ttheme_minimal(base_size=1)),  grid.arrange(grobs=lapply(Follow_on_dot_plot_PCRpos_vs_PCRneg_CT, "+", margin), limitsize=TRUE, nrow = 5, ncol = 4, top = NULL, layout_matrix = rbind(c(1,2,3,4), c(5,6,7,8),c(9,10,11,12), c(13,14,15,16))),  size = "last"), size = "last")


# ggsave(paste0("/mnt/sdb/BRC_COVID_omic_pilot/RScripts/analysis_version_1.0/output/limma/filter1/dot_plots/Dot_plots_top_stage_2_DEGs_on_stage_1_data_PCRpos_vs_PCRneg_",Sys.Date(),".png"),plot=combine_Follow_on_dot_plot_PCRpos_vs_PCRneg_CT, device ="png" , width = 6,height = 6) 



# 1d) Agreement plot ----
# Look for gene expression common after both vaccination (different vaccines and different timepoints ...)
?geom_text_repel

DE_ChAdOx1_CT_NAATpost_or_Control_CT_NAATpos <- unique(c(as.character(subset(read.table("/mnt/sdb/BRC_COVID_omic_pilot/RScripts/analysis_version_1.0/output/limma/filter1/BRC_COVID_omicsD0_CT_ChAdOx_PCRpos_Table_of_collapsed_gene_results_STAR_HTSeq_limma_paired_grch38_2023-03-02.txt", header = T), adj.P.Val <0.05)$external_gene_name), as.character(subset(read.table("/mnt/sdb/BRC_COVID_omic_pilot/RScripts/analysis_version_1.0/output/limma/filter1/BRC_COVID_omicsD0_CT_MENACWY_PCRpos_Table_of_collapsed_gene_results_STAR_HTSeq_limma_paired_grch38_2023-03-02.txt", header = T), adj.P.Val <0.05)$external_gene_name)))

agree1 <-  merge(read.table("/mnt/sdb/BRC_COVID_omic_pilot/RScripts/analysis_version_1.0/output/limma/filter1/BRC_COVID_omicsD0_CT_ChAdOx_PCRpos_Table_of_collapsed_gene_results_STAR_HTSeq_limma_paired_grch38_2023-03-02.txt", header = T)[match (DE_ChAdOx1_CT_NAATpost_or_Control_CT_NAATpos , read.table("/mnt/sdb/BRC_COVID_omic_pilot/RScripts/analysis_version_1.0/output/limma/filter1/BRC_COVID_omicsD0_CT_ChAdOx_PCRpos_Table_of_collapsed_gene_results_STAR_HTSeq_limma_paired_grch38_2023-03-02.txt", header = T)$external_gene_name), c("external_gene_name","logFC", "adj.P.Val", "external_gene_name")], read.table("/mnt/sdb/BRC_COVID_omic_pilot/RScripts/analysis_version_1.0/output/limma/filter1/BRC_COVID_omicsD0_CT_MENACWY_PCRpos_Table_of_collapsed_gene_results_STAR_HTSeq_limma_paired_grch38_2023-03-02.txt", header = T)[match (DE_ChAdOx1_CT_NAATpost_or_Control_CT_NAATpos , read.table("/mnt/sdb/BRC_COVID_omic_pilot/RScripts/analysis_version_1.0/output/limma/filter1/BRC_COVID_omicsD0_CT_MENACWY_PCRpos_Table_of_collapsed_gene_results_STAR_HTSeq_limma_paired_grch38_2023-03-02.txt", header = T)$external_gene_name), c("external_gene_name","logFC", "adj.P.Val")], by.x= "external_gene_name",by.y="external_gene_name")

colnames(agree1) <- c("gene", "LogFC.ChAdOx1", "FDR.ChAdOx1", "GeneID", "LogFC.Control", "FDR.Control")


agree1$sig.status <- ifelse (agree1$FDR.ChAdOx1 <0.05 & agree1$FDR.Control<0.05, "green", ifelse (agree1$FDR.ChAdOx1 <0.05, "red", "blue"))



library("plotly")
library("crosstalk")
# ggplotly (pChAdOx_Control_limma)


pChAdOx_Control_limma <- ggplot(agree1, aes(LogFC.Control, LogFC.ChAdOx1, text =GeneID)) + geom_point(col=agree1$sig.status, size=1.6) + xlim(-7.1,7.1)+ ylim(-7.1,7.1) + theme_bw() + theme(axis.text.y=element_text(size = 12), axis.title.y = element_text(size = 14), axis.text.x=element_text(size = 14), axis.title.x = element_text(size = 14), plot.subtitle=element_text(size=10)) + geom_hline(yintercept = 0, size =0.25) + geom_vline(xintercept = 0, size =0.25) + geom_text_repel(data = agree1[match (c("IFI27", "OTOF", "USP18", "CXCL10", "PI3", "IFI44L", "KREMEN1", "MEG3", "ADAMTS5", "CORIN"), agree1$GeneID ),], aes( LogFC.Control,LogFC.ChAdOx1, label =GeneID), size =4, col ="purple", fontface="bold", box.padding = 0.5 ) + labs(x= expression("log" [2]*" FC, D0 vs CT [control]"), y= expression("log" [2]*" FC, D0 vs CT [ChAdOx1 nCov19]"),  subtitle= "Gene perturbation SARS-CoV-2 infection, ChAdOx1 nCoV19 recipients Vs control [MenACWY]") + geom_abline(intercept = 0, lty="dashed", col="grey")


# # 
# png(paste0("/mnt/sdb/BRC_COVID_omic_pilot/RScripts/analysis_version_1.0/output/limma/filter1/Agreement_plot/Agreement_plot_SARSCoV2_infection_ChAdOx_Vs_control_P0.05_",Sys.Date(),".png"))
# pChAdOx_Control_limma
# dev.off()




## here 02-07-2021 ---- 


# 1e) PCA ----

library("FactoMineR")
library("factoextra")

sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result_TP<- factor(gsub("D0_NAAT_neg","D0", gsub("D0_NAAT_pos","D0", paste0(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint, "_" ,sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result))), levels = c("D0","CT_NAAT_neg", "CT_NAAT_pos", "CT+7_NAAT_neg", "CT+7_NAAT_pos" ))


sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result_TP_Grp <- factor(ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result_TP=="CT_NAAT_pos", paste0(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result_TP,"_", sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$randomisation_group), ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result_TP=="CT+7_NAAT_pos", paste0(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result_TP,"_", sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$randomisation_group), as.character(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result_TP))), levels = c("D0", "CT_NAAT_neg", "CT_NAAT_pos_ChAdOx1", "CT_NAAT_pos_MenACWY", "CT+7_NAAT_neg", "CT+7_NAAT_pos_ChAdOx1", "CT+7_NAAT_pos_MenACWY"))

levels(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result_TP_Grp)
# black =D0
# grey= CT_NAAT_neg
# red = CT_NAAT_pos_ChAdOx1
# blue = CT_NAAT_pos_MenACWY
# lightgrey= CT+7_NAAT_neg
# hotpink = CT+7_NAAT_pos_ChAdOx1
# cyan = CT+7_NAAT_pos_MenACWY



pcaMA = prcomp(t(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom$E))
maPComps <- pcaMA$x
percent = round((((pcaMA$sdev)^2 / sum(pcaMA$sdev^2))*100)[1:2])

Voom_E_pca <- ggplot(data = as.data.frame(pcaMA$x), aes(c(maPComps[,"PC1"]*-1), c(maPComps[,"PC2"]),label =as.character(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$participant_ID), group = sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$participant_ID)) + geom_point(size=4,aes(colour =sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result_TP_Grp ))  + ylab(paste("PC2 (", percent[2], "%)", sep = "")) +   xlab(paste("PC1 (", percent[1], "%)", sep = "")) + scale_colour_manual(values =c("black","slategrey", "red", "blue", "gainsboro", "hotpink", "cyan"), breaks=c("D0", "CT_NAAT_neg", "CT_NAAT_pos_ChAdOx1", "CT_NAAT_pos_MenACWY", "CT+7_NAAT_neg", "CT+7_NAAT_pos_ChAdOx1","CT+7_NAAT_pos_MenACWY"),labels=c("D0", "CT_NAAT_neg", "CT_NAAT_pos_ChAdOx1", "CT_NAAT_pos_MenACWY", "CT+7_NAAT_neg", "CT+7_NAAT_pos_ChAdOx1","CT+7_NAAT_pos_MenACWY")) + theme (legend.title = element_blank(),panel.background = element_blank(), plot.margin = unit(c(0.2,2,0.1,0.1), "cm"), legend.position="bottom", legend.margin=margin(t = -0.1,unit='cm')) + geom_path(aes(group = sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$participant_ID), color="grey", linetype="dashed" , arrow = arrow(ends = "last"))



Voom_for_pca <- (t(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom$E[!duplicated(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$Gene$external_gene_name),]))
# 
colnames(Voom_for_pca)<-  sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$Gene[!duplicated(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$Gene$external_gene_name),"external_gene_name"]

res.pca.voom <- PCA(Voom_for_pca, scale.unit = FALSE, ncp=5, graph = FALSE)
eig.val.voom <- get_eigenvalue(res.pca.voom)
#sum(eig.val[1:5,"variance.percent"]) # 17.67% variance explained by top 5 PCs
plot(maPComps[,"PC1"], maPComps[,"PC2"]*-1)
plot(res.pca.voom$ind$coord[,"Dim.1"],res.pca.voom$ind$coord[,"Dim.2"]) # for some reason this has plotted back-to-front
# So PCA plotted with *-1 dim 1 and 2



Voom_E_contribution_plot <- fviz_pca_var(res.pca.voom, select.var = list(contrib = 7), repel = TRUE, axes = 1:2, col.var = "contrib",legend.title = "Contribution", gradient.cols = c( "orange", "red"), title="", labelsize = 2,  arrowsize = 0.4) + theme(axis.text.x = element_blank(),axis.text.y = element_blank(), axis.ticks = element_blank(), legend.position="top", plot.margin = unit(c(-0.5,0.3,2,-0.5), "cm"), text = element_text(size = 6), legend.text=element_text(size=5), legend.title=element_text(size=5), legend.key.width = unit(0.7, "line"), legend.key.height =  unit(0.4, "line"), legend.margin=margin(t = 0.1, b = -0.1 ,unit='cm'))+ labs(x="PC1", y="PC2") # top 10, got some ribosomal 

Voom_pca_con <-NULL

Voom_pca_con[[1]] <- Voom_E_pca
Voom_pca_con[[2]] <- Voom_E_contribution_plot

# ggsave(paste0("/mnt/sdb/BRC_COVID_omic_pilot/RScripts/analysis_version_1.0/output/limma/filter1/PCA/PCA_and_contribution_BRC_COVID_omics_by_timepoint_LimmaVoom",Sys.Date(),".tiff"),grid.arrange(grobs=Voom_pca_con, limitsize=TRUE, nrow =4, ncol = 4, top = NULL, layout_matrix = rbind(c(1,1,1,2), c(1,1,1,2), c(1,1,1,3), c(1,1,1,3))), device ="tiff", width = 30, height = 20, units = "cm")

##

Voom_E_pca_D0_CT_ellipse <- ggplot(data = as.data.frame(pcaMA$x[sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint !="CT+7",sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint !="CT+7"]), aes(c(maPComps[sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint !="CT+7","PC1"]*-1), c(maPComps[sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint !="CT+7","PC2"]))) + geom_point(size=4,aes(colour =sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result_TP_Grp[sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint !="CT+7"] ))  + ylab(paste("PC2 (", percent[2], "%)", sep = "")) + scale_colour_manual(values =c("black","grey", "red", "blue"), breaks=c("D0", "CT_NAAT_neg", "CT_NAAT_pos_ChAdOx1", "CT_NAAT_pos_MenACWY"),labels=c("D0", "CT_NAAT_neg", "CT_NAAT_pos_ChAdOx1", "CT_NAAT_pos_MenACWY"))+   xlab(paste("PC1 (", percent[1], "%)", sep = ""))  + theme (legend.title = element_blank(),panel.background = element_blank(), plot.margin = unit(c(0.2,2,0.1,0.1), "cm"), legend.position="bottom", legend.margin=margin(t = -0.1,unit='cm')) + stat_ellipse(aes(group =factor(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result_TP_Grp[sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint !="CT+7"] ), colour =factor(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result_TP_Grp[sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint !="CT+7"] )),  level = 0.95)

# ggsave(paste0("/mnt/sdb/BRC_COVID_omic_pilot/RScripts/analysis_version_1.0/output/limma/filter1/PCA/PCA_and_contribution_BRC_COVID_omics_by_timepoint_ellipse_D0_CT_",Sys.Date(),".tiff"),Voom_E_pca_D0_CT_ellipse, device ="tiff", width = 20, height = 20, units = "cm")

#######




# 1f) DEGs only ----


sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins_DE.voom<- sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom[rownames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom) %in% DE_D11_or_D7_boost,] # note DE_D11_or_D7_boost is p,0.05

pcaMA_DE = prcomp(t(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins_DE.voom$E))
maPComps_DE <- pcaMA_DE$x
percent_DE = round((((pcaMA_DE$sdev)^2 / sum(pcaMA_DE$sdev^2))*100)[1:2])

Voom_E_pca_DE <- ggplot(data = as.data.frame(pcaMA_DE$x), aes(c(maPComps_DE[,"PC1"]*-1), c(maPComps_DE[,"PC2"]*-1),label =as.character(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$ParticipantID), group = sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$ParticipantID)) + geom_point(size=2,aes(colour = factor(ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Vaccines=="Placebo.Placebo","Placebo", ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Vaccines=="Ad26" & sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Visit=="D36","Placebo",as.character(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Visit) )), levels=c("D1", "D11", "D36", "D64", "D92", "Placebo"))))  + ylab(paste("PC2 (", percent_DE[2], "%)", sep = "")) +   xlab(paste("PC1 (", percent_DE[1], "%)", sep = "")) + scale_colour_manual(values =c("#71a554","#a464bf", "#cd546a", "#c2803b", "#6097ce", "black"), breaks=c("D1", "D11", "D36", "D64", "D92", "Placebo"),labels=c("D1", "D11", "D36", "D64", "D92", "Placebo")) + theme (legend.title = element_blank(),panel.background = element_blank(), plot.margin = unit(c(0.2,2,0.1,0.1), "cm"), legend.position="bottom", legend.margin=margin(t = -0.1,unit='cm')) + stat_ellipse(aes(group=factor(ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Vaccines=="Placebo.Placebo","Placebo", ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Vaccines=="Ad26" & sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Visit=="D36","Placebo",as.character(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Visit) )), levels=c("D1", "D11", "D36", "D64", "D92", "Placebo")), colour = factor(ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Vaccines=="Placebo.Placebo","Placebo", ifelse(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Vaccines=="Ad26" & sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Visit=="D36","Placebo",as.character(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Visit) )), levels=c("D1", "D11", "D36", "D64", "D92", "Placebo"))),  level = 0.95)
#+ geom_text()


rownames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins_DE.voom) <-sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins_DE.voom$genes$GeneID 


res.pca.voom_DE <- PCA(t(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins_DE.voom$E), scale.unit = FALSE, ncp=5, graph = FALSE)

eig.val.voom_DE <- get_eigenvalue(res.pca.voom_DE)
#sum(eig.val[1:5,"variance.percent_DE"]) # 17.67% variance explained by top 5 PCs
var.voom_DE <- get_pca_var(res.pca.voom_DE)
plot(maPComps_DE[,"PC1"]*-1, maPComps_DE[,"PC2"]*-1)
plot(res.pca.voom_DE$ind$coord[,"Dim.1"],res.pca.voom_DE$ind$coord[,"Dim.2"]) 


Voom_E_contribution_plot_DE <- fviz_pca_var(res.pca.voom_DE, select.var = list(contrib = 5), repel = TRUE, axes = 1:2, col.var = "contrib",legend.title = "Contribution", gradient.cols = c( "orange", "red"), title="", labelsize = 2,  arrowsize = 0.4) + theme(axis.text.x = element_blank(),axis.text.y = element_blank(), axis.ticks = element_blank(), legend.position="top", plot.margin = unit(c(-0.5,0.3,2,-0.5), "cm"), text = element_text(size = 6), legend.text=element_text(size=5), legend.title=element_text(size=5), legend.key.width = unit(0.7, "line"), legend.key.height =  unit(0.4, "line"), legend.margin=margin(t = 0.1, b = -0.1 ,unit='cm'))+ labs(x="PC1", y="PC2") # 

Voom_pca_con_DE <-NULL

Voom_pca_con_DE[[1]] <- Voom_E_pca_DE
Voom_pca_con_DE[[2]] <- Voom_E_contribution_plot_DE

#  ggsave(paste0("/mnt/sdb/BRC_COVID_omics/RScripts/analysis_version_1.0/output/figures/PCA/PCA_and_contribution_BRC_COVID_omics_by_timepoint_DEG_0.05_only_LimmaVoom",Sys.Date(),".tiff"),grid.arrange(grobs=Voom_pca_con_DE, limitsize=TRUE, nrow =4, ncol = 4, top = NULL, layout_matrix = rbind(c(1,1,1,2), c(1,1,1,1))), device ="tiff" )
# # 




# 2) Filter 1 + plasma/B cell number correction ----
# asymmetric volcano plots - can I find out how to correct for this?

load("/mnt/sdb/BRC_COVID_omics/RScripts/analysis_version_1.0/BRC_COVID_omics_transcripts.no.sex.chr_STAR_HTSeq_GRCh38_p12_filter12020-05-07voom.remove.rRNA.globins.R")


BRC_COVID_omics_STAR_HTSeq_rpkm_CIBERSORT_res <- (read.delim("/mnt/sdb/BRC_COVID_omics/RScripts/analysis_version_1.0/CIBERSORT/BRC_COVID_omics_STAR_HTSeq_rpkm_for_CIBERSORT.Output_Job20.txt",header = T, sep = "\t", row.names = 1))

rownames(BRC_COVID_omics_STAR_HTSeq_rpkm_CIBERSORT_res)<- substr(rownames(BRC_COVID_omics_STAR_HTSeq_rpkm_CIBERSORT_res), 8,13)

sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$cibersort <- BRC_COVID_omics_STAR_HTSeq_rpkm_CIBERSORT_res[rownames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples),]

sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_plasma_cells = model.matrix(~ -1 + paste(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Visit, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$group, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Vaccines, sep="_")+ sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$cibersort$Plasma.cells + sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$cibersort$B.cells.memory )


colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_plasma_cells) <- gsub("paste(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Visit, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$group, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Vaccines, sep = \"_\")", "" ,colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_plasma_cells), fixed=T)
colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_plasma_cells) <- gsub("sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$cibersort$", "" ,colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_plasma_cells), fixed=T)

sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.plasma_cell_corrected.voom <- voom(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_plasma_cells  , plot=FALSE)

##confit.filtered.grp.S.plasma_cell_corrected.voom <- duplicateCorrelation(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.plasma_cell_corrected.voom, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_plasma_cells  , block=sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$ParticipantID)
# 
# confit.filtered.grp.S.plasma_cell_corrected.voom$consensus.correlation
# [1] 0.3671761
# 
sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.plasma_cell_corrected.voom$consensus.correlation <- 0.3671761

vfit_grp.plasma.cells <- lmFit(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.plasma_cell_corrected.voom, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_plasma_cells, correlation=sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.plasma_cell_corrected.voom$consensus.correlation, block = sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$ParticipantID)

pre_vs_post_group_contrast.plasma.cells <- makeContrasts(D1_D11_all_groups = (D11_1_Ad26.MVA + D11_2_Ad26.MVA + D11_3_Ad26.MVA + D11_1_Ad26)/4 - ( D1_1_Ad26.MVA + D1_2_Ad26.MVA + D1_3_Ad26.MVA + D1_1_Ad26)/4, D1_D7_boost_all_groups = (D36_1_Ad26.MVA + D64_2_Ad26.MVA + D92_3_Ad26.MVA)/3 - (D1_1_Ad26.MVA + D1_2_Ad26.MVA +D1_3_Ad26.MVA)/3, D1_D36 = (D36_1_Ad26.MVA)/1  - ( D1_1_Ad26.MVA)/1, D1_D64 = D64_2_Ad26.MVA  - D1_2_Ad26.MVA, D1_D92 = D92_3_Ad26.MVA  - D1_3_Ad26.MVA,  plasma.cells =Plasma.cells, b.cell.memory= B.cells.memory,  levels=sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_plasma_cells )


vfit_grp.plasma.cells <- contrasts.fit(vfit_grp.plasma.cells, contrasts=pre_vs_post_group_contrast.plasma.cells)
efit_grp.plasma.cells <- eBayes(vfit_grp.plasma.cells)

dt_grp.plasma.cells <- decideTests(efit_grp.plasma.cells)
summary(dt_grp.plasma.cells)

# D1_D11_all_groups D1_D7_boost_all_groups D1_D36 D1_D64 D1_D92 plasma.cells b.cell.memory
# Down                   0                     12      1      2      0            9             1
# NotSig             13242                  13029  13173  13125  13189        12968         13243
# Up                     2                    203     70    117     55          267             0


topTable(efit_grp.plasma.cells, coef="plasma.cells", sort.by="P", adjust='fdr', number=10)


# 2b) Volcano plot ----

library("ggrepel")
require(gridExtra)
for (i in colnames(efit_grp.plasma.cells$coefficients)) {
  pq = as.data.frame(topTable(efit_grp.plasma.cells, coef=i, sort.by="P", adjust='fdr', number=nrow(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.plasma_cell_corrected.voom)))
  #rownames(pq) <- get(i)$gene_id
  p.cut =0.05
  lfc.cut = 0.32
  vFC = lfc.cut
  pq$col = ifelse (pq$adj.P.Val < p.cut & pq$logFC > lfc.cut, "1", ifelse(pq$adj.P.Val < p.cut & pq$logFC < -lfc.cut, "2" ,"3"))
  pq$alpha = ifelse (pq$col == 1 | pq$col == 2, 1, 0.5)
  x_title         <- c( expression("log" [2]*" FC"))
  y_title         <- c(expression("-log"[10]*" (FDR)"))
  xlims = abs(max(pq$logFC))
  volc = ggplot(data = pq, aes(logFC, -log10(adj.P.Val), color = col)) + geom_point(size = 2, show.legend = F) + scale_color_manual(values = c("1" = "red", "2" = "blue", "3" = "grey")) + geom_hline(yintercept = (-log10(p.cut)), lty = 3) + geom_vline(xintercept = c(-vFC, vFC), lty=3) + xlim(-xlims, xlims) + ylim(0, max(-log10(pq$adj.P.Val))) + labs(title = paste0(substr(i,1,7)," Volcano plot" )) + xlab(x_title) + ylab(y_title) + theme(axis.text=element_text(color = "black", size = 15), axis.title=element_text(size=18, face="plain"), plot.title=element_text(size = rel(1.5),face="bold"),  panel.border = element_rect(fill="NA", colour = "black", size = 0.5), axis.line = element_blank(), axis.ticks = element_line(color="black", size = 0.5), panel.background = element_rect(fill='white', colour='black')) + geom_text_repel(data=head(pq, 20), aes(label=GeneID), show.legend = FALSE) #+ coord_fixed(ratio = 0.4)
  ggsave( paste0("/mnt/sdb/BRC_COVID_omics/RScripts/analysis_version_1.0/output/figures/volcano_plots/Plasma_cell_B_Mem_contribution_corrected/Volcano_plasma_cell_B_Mem_contribution_corrected_",i,".png"), plot=volc, height = 7, width = 5)
}


## Scrap ----

# demographic table
# demographic_info <- read.xls("/mnt/sdb/BRC_COVID_omic_pilot/Omics_COVID_PCR_demographics_final.xlsx") # data from 6th April 202, check by Irina Chelysheva and Daniel Philips
# head(demographic_info)
# 
# demographic_info$symptom_date <- ifelse(demographic_info$record_id=="21415159", demographic_info$s0_date,demographic_info$symptom_date)
# 
# # days_since_prime_to_symptom
# 
# demographic_info$days_since_prime_to_symptom <- as.numeric(as.Date(demographic_info$symptom_date) - as.Date(demographic_info$vacc_date))
# 
# 
# 
# demographic_info$days_since_boost_to_symptom <- as.numeric(as.Date(demographic_info$symptom_date) - as.Date(demographic_info$vacc_date_2))
# 
# demographic_info$days_since_boost_to_symptom <- ifelse(demographic_info$days_since_boost_to_symptom < 0, NA, demographic_info$days_since_boost_to_symptom )
# 
# # primary efficacy analysis > 14 days after the second dose of vaccine
# demographic_info$vaccine_status <- ifelse(demographic_info$days_since_boost_to_symptom > 14, "complete","partial")
# 
# demographic_info$vaccine_status <- ifelse(is.na(demographic_info$days_since_boost_to_symptom),"partial", demographic_info$vaccine_status)
# 
# 
# # table(demographic_info %>%
# #   filter(!duplicated(`record_id`)) %>% mutate(vaccine_stat2=paste0(randomisation_group,vaccine_status)) %>% select(vaccine_stat2))









# 3) Filter 1 + PC1-3 correction 

# # asymmetric volcano plots - can I find out how to correct for this?
# 
# 
# pcaMA = prcomp(t(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom$E))
# maPComps <- pcaMA$x
# sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$PCA <- maPComps[,c("PC1", "PC2", "PC3")]
# 
# sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_PC1_2_3= model.matrix(~ -1 + paste(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Visit, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$group, sep="_") + sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$PCA[,c("PC1")] +  sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$PCA[,c("PC2")] + sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$PCA[,c("PC3")])
# 
# colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_PC1_2_3) <- gsub("paste(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$Visit, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$group, sep = \"_\")", "" ,colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_PC1_2_3), fixed=T)
# colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_PC1_2_3) <- gsub("sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$PCA[, c(\"PC1\")]", "PC1" ,colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_PC1_2_3), fixed=T)
# colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_PC1_2_3) <- gsub("sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$PCA[, c(\"PC2\")]", "PC2" ,colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_PC1_2_3), fixed=T)
# colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_PC1_2_3) <- gsub("sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$PCA[, c(\"PC3\")]", "PC3" ,colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_PC1_2_3), fixed=T)
# 
# sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.PC1_2_3_corrected.voom <- voom(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_PC1_2_3, plot=FALSE)
# 
# confit.filtered.grp.S.PC1_2_3_corrected.voom <- duplicateCorrelation(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.PC1_2_3_corrected.voom, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_PC1_2_3_3 , block=sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$ParticipantID)
# # 
# # confit.filtered.grp.S.PC1_2_3_corrected.voom$consensus.correlation
# # [1] 0.4364
# # 
# sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.PC1_2_3_corrected.voom$consensus.correlation <- 0.4364 # this seems high for what I've seen before 
# 
# 
# 
# vfit_grp.PC1_2_3<- lmFit(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.PC1_2_3_corrected.voom, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_PC1_2_3, correlation=sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.PC1_2_3_corrected.voom$consensus.correlation, block = sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$ParticipantID)
# 
# pre_vs_post_group_contrast.PC1_2_3<- makeContrasts(D1_D11_all_groups = (D11_1 + D11_2 + D11_3)/3 - (D1_1 + D1_2 +D1_3)/3, D1_D7_boost_all_groups = (D36_1 + D64_2 + D92_3)/3 - (D1_1 + D1_2 +D1_3)/3, D1_D36 = D36_1  - D1_1, D1_D64 = D64_2  - D1_2, D1_D92 = D92_3  - D1_3,PC1 =PC1, PC2 =PC2 ,PC3 =PC3, levels=sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group_PC1_2_3) #
# 
# 
# vfit_grp.PC1_2_3<- contrasts.fit(vfit_grp.PC1_2_3, contrasts=pre_vs_post_group_contrast.PC1_2_3)
# efit_grp.PC1_2_3<- eBayes(vfit_grp.PC1_2_3)
# 
# dt_grp.PC1_2_3<- decideTests(efit_grp.PC1_2_3)
# summary(dt_grp.PC1_2_3)
# 
# topTable(efit_grp.PC1_2_3, coef="D1_D7_boost_all_groups", sort.by="P", adjust='fdr', number=10)
# topTable(efit_grp.PC1, coef="D1_D11_all_groups", sort.by="P", adjust='fdr', number=50)
# 
# plotMD(efit_grp.PC1_2_3, coef="D1_D11_all_groups", status= decideTests(efit_grp.PC1_2_3, p.value = 0.01)[,"D1_D11_all_groups"])
# 





