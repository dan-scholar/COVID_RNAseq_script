# STAR ribodepletion — STAR 2.6.1d — human_rRNA_genome (genome release 92)
# STAR alignment — STAR 2.7.3a — release 98 
# HT-seq feature count - GRCh38.98 ( version 0.11.1)

#### ii) Prelude 

library("edgeR")
packageVersion("edgeR")
# [1] ‘3.42.4’
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library(NOISeq)
packageVersion("NOISeq")
# [1] ‘2.44.0’
library(dplyr)
packageVersion("dplyr")
# [1] ‘1.1.3’
library("gdata")
packageVersion("gdata")
# [1] ‘3.0.0’
library("readxl")
packageVersion("readxl")
#[1] ‘1.4.3’


library(dplyr)
packageVersion("dplyr")
# [1] ‘1.1.3’
library(edgeR)
packageVersion("edgeR")
# [1] ‘3.42.4’
library(limma)
packageVersion("limma")
# [1] ‘3.56.2’
library("ggrepel")
packageVersion("ggrepel")
# [1] ‘0.9.4’
require(gridExtra)
packageVersion("gridExtra")
# [1] ‘2.3’


#### ii) Compile count data #### 

# Take 'all' htseq-count results and melt them in to one big dataframe

# where are we?
basedir <- here::here("BRC_COVID_omic_pilot") # can edit this to makes the directory with count data
setwd(basedir)

cntdir <- paste(basedir, "count", sep="/")
pat <- "HTseq.count"
star.all <- list.files(path = cntdir,
                       pattern = pat,
                       all.files = TRUE,
                       recursive = FALSE,
                       ignore.case = FALSE,
                       include.dirs = FALSE)

# we choose the 'all' series
myfiles <- star.all
DT <- list()

# read each file as array element of DT and rename the last 2 cols
# we created a list of single sample tables
for (i in 1:length(myfiles) ) {
  infile = paste(cntdir, myfiles[i], sep = "/")
  DT[[myfiles[i]]] <- read.table(infile, header = F, stringsAsFactors = FALSE)
  cnts <- gsub("(.*)HTseq.count", "\\1", myfiles[i])
  colnames(DT[[myfiles[i]]]) <- c("ID", cnts)
}

# merge all elements based on first ID columns
data <- DT[[myfiles[1]]]


# we now add each other table with the ID column as key
for (i in 2:length(myfiles)) {
  y <- DT[[myfiles[i]]]
  z <- merge(data, y, by = c("ID"))
  data <- z
}

# ID column becomes rownames
rownames(data) <- data$ID
data <- data[,-1]

## add total counts per sample
data <- rbind(data, tot.counts=colSums(data))



# take all data rows to a new table

data.all <- data[grep("^ENS", rownames(data), perl=TRUE, invert=FALSE), ]

# final merged table
dim(data.all)
# [1] 60623    58

# write.csv(data.all, file = paste0(basedir, "BRC_omics_RNA-seq_STAR_HTSeq_", Sys.Date(), ".csv")) # write count tables




#### 0) Prelude and QC #####

#### 0b) SEQUENCING DATA LOADING & CLEANING #####


sd <- DGEList(counts=read.csv(paste0(here::here("BRC_COVID_omic_pilot"),"/","BRC_omics_RNA-seq_STAR_HTSeq_2021-03-15.csv"), row.names = 1)) #  count data from STAR HTSeq #

dim(sd)
# 60623    58
mean(apply(sd$counts, 2, sum))
# 18404922

sd$samples$lib.size <- colSums(sd$counts)
sd <- calcNormFactors(sd, method="TMM")

sd$samples$ID<- substr(rownames(sd$samples), 2,9)

sample_info <- read_excel("/mnt/sdb/BRC_COVID_omic_pilot/COVID_multiomics_metadata.xlsx",skip = 43, sheet = "Illumina RNA seq" )[1:180,]

sample_info$ID <- substr(sample_info$`library name`, 7,15)


sd$samples <- merge(sd$samples,sample_info[,c("library name","title","timepoint","Vaccine", "NAAT result", "Participant number", "ID")], by.x ="ID", by.y= "ID") %>% rename(  participant_ID =`Participant number`, randomisation_group= Vaccine , NAAT_result=`NAAT result` )

rownames(sd$samples) <- sd$samples$`library name`



library(biomaRt)

mart=useMart("ensembl",host="http://sep2019.archive.ensembl.org", dataset = "hsapiens_gene_ensembl")

searchDatasets(mart = mart, pattern = "hsapiens")
#                  dataset              description    version
# 85 hsapiens_gene_ensembl Human genes (GRCh38.p13) GRCh38.p13
ensembl <- useEnsembl(biomart = "ENSEMBL_MART_ENSEMBL", dataset = "hsapiens_gene_ensembl" )
ensembl <- useDataset(dataset = "hsapiens_gene_ensembl", mart = mart)
attributes = listAttributes(ensembl)
selected_attributes <- c( "ensembl_gene_id", "entrezgene_id", "gene_biotype", "external_gene_name", "transcript_length", "chromosome_name")
gene_metadata1 = getBM(attributes = selected_attributes, mart = ensembl) #downloads data

dim(gene_metadata1)
# [1] 248799      6
gene_metadata1 = dplyr::select(gene_metadata1,ensembl_gene_id, gene_biotype, external_gene_name, chromosome_name  ) %>% unique() #subselection of the metaData (geneIDs, geneNames, biotype)

rownames(gene_metadata1)= gene_metadata1$ensembl_gene_id

dim(gene_metadata1)
#[1] 67087     4


# #### 0c) CLEAN RAW COUNT TABLE ####

gene_metadata_STAR_HTSeq = gene_metadata1[  rownames(sd), ]

stopifnot(identical(as.character(rownames(sd)), as.character(rownames(gene_metadata_STAR_HTSeq))))

gend_star_HTSeq = gene_metadata_STAR_HTSeq$ensembl_gene_id[ -which(gene_metadata_STAR_HTSeq$chromosome_name == "X" | gene_metadata_STAR_HTSeq$chromosome_name == "Y")] # remove sex chromosomes


gend_gene_metadata_STAR_HTSeq = gene_metadata_STAR_HTSeq[ -which(gene_metadata_STAR_HTSeq$chromosome_name == "X" | gene_metadata_STAR_HTSeq$chromosome_name == "Y"),] 

sd2_star_HTSeq_autosomes = sd[ gend_star_HTSeq, ] #select autosomes

dim(sd2_star_HTSeq_autosomes) # 57678    58

stopifnot(identical(rownames(sd2_star_HTSeq_autosomes), rownames(gend_gene_metadata_STAR_HTSeq)))

sd2_star_HTSeq_autosomes$Gene <- gend_gene_metadata_STAR_HTSeq


sd2_star_HTSeq_autosomes$samples$lib.size = colSums(sd2_star_HTSeq_autosomes$counts)# re-compute library size

mean(sd2_star_HTSeq_autosomes$samples$lib.size)
# 17863942 
# # normalization - effective library size - sample specific normalization factors
sd2_star_HTSeq_autosomes = calcNormFactors(sd2_star_HTSeq_autosomes, method = "TMM") #


dim(sd2_star_HTSeq_autosomes)
# [1] 57678    58


#### 1) Filter transcripts #####
# Filter by gene expression level (remove noise)

dim(sd2_star_HTSeq_autosomes)
#[1] 57678    58

sd2_star_HTSeq_autosomes$metadata <- sd2_star_HTSeq_autosomes$samples



#table(sd2_star_HTSeq_autosomes$metadata$timepoint)

# CT CT+7   D0 
# 29   19   10 

# table(sd2_star_HTSeq_autosomes$metadata$randomisation_group)
# ChAdOx1 MenACWY 
# 26      32 

## table(sd2_star_HTSeq_autosomes$metadata$NAAT_result)
# 0  1 
# 27 31 

keep <- rowSums(cpm(sd2_star_HTSeq_autosomes)>3, na.rm=T) >= 9

table(keep)
# FALSE  TRUE 
# 44212 13466  
sd2_star_HTSeq_autosomes.filtered <- sd2_star_HTSeq_autosomes[keep,]
dim(sd2_star_HTSeq_autosomes.filtered)
#[1] 13466    58

sd2_star_HTSeq_autosomes.filtered$Gene <- sd2_star_HTSeq_autosomes.filtered$Gene[rownames(sd2_star_HTSeq_autosomes.filtered$counts),]

sd2_star_HTSeq_autosomes.filtered$genes <- sd2_star_HTSeq_autosomes.filtered$Gene
sd2_star_HTSeq_autosomes.filtered$genes$GeneID <- sd2_star_HTSeq_autosomes.filtered$Gene$gene_name


# # Filter 1 ----
sd2_star_HTSeq_autosomes.filtered$samples$lib.size <- colSums(sd2_star_HTSeq_autosomes.filtered$counts)
sd2_star_HTSeq_autosomes.filtered <- calcNormFactors(sd2_star_HTSeq_autosomes.filtered)




# Remove Mt_rRNA and globins
sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins <- sd2_star_HTSeq_autosomes.filtered[-grep("Mt_|rRNA", sd2_star_HTSeq_autosomes.filtered$Gene$gene_biotype),]
sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$Gene <- sd2_star_HTSeq_autosomes.filtered$Gene[-grep("Mt_|rRNA", sd2_star_HTSeq_autosomes.filtered$Gene$gene_biotype),]
sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins <- sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins[-grep("HBB|HBA1|HBA2|HBG1|HBG2", sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$Gene$external_gene_name),]

sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$Gene <- sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$Gene[-grep("HBB|HBA1|HBA2|HBG1|HBG2", sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$Gene$external_gene_name),]

sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$samples$lib.size <- colSums(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$counts)
sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins <- calcNormFactors(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins)



dim(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins)
# [1] 13457    58



# QC ----


## Density plots ----
library(viridis)
col <- viridis (n=58)
unfiltered_lcpm <- cpm(sd2_star_HTSeq_autosomes, log=TRUE)

pdf( paste0(here::here("BRC_COVID_omic_pilot"),"/Stage1_Density_plot_", Sys.Date(),".pdf"), height = 8, width = 12)

par(mfrow=c(1,2))
plot(density(unfiltered_lcpm[,1]), col=col[1], lwd=2, las=2, main="", xlab="")
title(main="A. Raw data", xlab="Log-cpm")
for (i in 2:ncol(sd2_star_HTSeq_autosomes)){
  den <- density(unfiltered_lcpm[,i])
  lines(den$x, den$y, col=col[i], lwd=2)
}
lcpm <- cpm(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins, log=TRUE)
plot(density(lcpm[,1]), col=col[1], lwd=2, ylim=c(0,0.26), las=2, main="", xlab="")
title(main="B. Filtered data", xlab="Log-cpm")
for (i in 2:ncol(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins)){
  den <- density(lcpm[,i])
  lines(den$x, den$y, col=col[i], lwd=2)
}
dev.off()


#### 2) DE genes  ####

## Limma ----

# i) Contrast matrix ----


#dim(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins)
## [1] 13457    58


## table(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result)
# 0  1 
# 27 31 


table((sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata %>% 
         dplyr::filter(! duplicated(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$participant_ID)))[,"NAAT_result"] )

# 0  1 
# 13 16 


table((sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata %>% 
         dplyr::filter(! duplicated(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$participant_ID)))[,"randomisation_group"] )

# ChAdOx1 MenACWY 
# 12      17 


sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint<- factor(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint,levels = c("D0", "CT", "CT+7") )


sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group = model.matrix(~ -1 + paste(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$randomisation_group,sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result, sep="_") )



colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group) <- gsub("paste(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$timepoint, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$randomisation_group, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$metadata$NAAT_result, sep = \"_\")", "" ,colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group), fixed=T)

sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom <- voom(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group , plot=FALSE)


colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group) <- gsub("CT\\+7","CTplus7",colnames(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group))

vfit_grp <- lmFit(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom, sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group)


symp_contrast <- makeContrasts(D0_CT_all_groups = (CT_ChAdOx1_1 + CT_MenACWY_1+ CT_ChAdOx1_0 + CT_MenACWY_0)/4-(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0 + D0_MenACWY_1)/4, D0_CT7_all_groups =(CTplus7_ChAdOx1_1 + CTplus7_MenACWY_1+ CTplus7_ChAdOx1_0 + CTplus7_MenACWY_0)/4-(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0 + D0_MenACWY_1)/4, CT7_CT_all_groups =(CTplus7_ChAdOx1_1 + CTplus7_MenACWY_1+ CTplus7_ChAdOx1_0 + CTplus7_MenACWY_0)-(CT_ChAdOx1_1 + CT_MenACWY_1+ CT_ChAdOx1_0 + CT_MenACWY_0), D0_CT_PCRpos = (CT_ChAdOx1_1 + CT_MenACWY_1)/2-(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0 + D0_MenACWY_1 )/4, D0_CT7_PCRpos =(CTplus7_ChAdOx1_1 + CTplus7_MenACWY_1)/2-(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0+ D0_MenACWY_1)/4, CT_CT7_PCRpos =(CTplus7_ChAdOx1_1 + CTplus7_MenACWY_1)-(CT_ChAdOx1_1 + CT_MenACWY_1), D0_CT_PCRneg =(CT_ChAdOx1_0 + CT_MenACWY_0)/2-(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0+ D0_MenACWY_1)/4, D0_CT7_PCRneg =(CTplus7_ChAdOx1_0 + CTplus7_MenACWY_0)/2-(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0 + D0_MenACWY_1)/4, CT7_CT_PCRneg =(CTplus7_ChAdOx1_0 + CTplus7_MenACWY_0)-(CT_ChAdOx1_0 + CT_MenACWY_0), compare_PCRpos_vs_PCRneg_CT = (CT_ChAdOx1_1 + CT_MenACWY_1)/2 - (CT_ChAdOx1_0 + CT_MenACWY_0)/2,compare_PCRposChAdOx1_vs_PCRneg_CT = (CT_ChAdOx1_1 ) - (CT_ChAdOx1_0 + CT_MenACWY_0)/2,compare_PCRposMenACWY_vs_PCRneg_CT = (CT_MenACWY_1 ) - (CT_ChAdOx1_0 + CT_MenACWY_0)/2, D0_CT_ChAdOx_PCRpos = (CT_ChAdOx1_1) -(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0 + D0_MenACWY_1)/4, D0_CT7_ChAdOx_PCRpos = (CTplus7_ChAdOx1_1) -(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0 + D0_MenACWY_1)/4,CT_CT7_ChAdOxPCRpos = (CTplus7_ChAdOx1_1) - (CT_ChAdOx1_1),CT_CT7_MENACWYPCRpos=(CTplus7_MenACWY_1) - (CT_MenACWY_1), D0_CT_MENACWY_PCRpos =  (CT_MenACWY_1) -(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0 +D0_MenACWY_1 )/4, D0_CT7_MENACWY_PCRpos = (CTplus7_MenACWY_1) -(D0_ChAdOx1_1 + D0_ChAdOx1_0 + D0_MenACWY_0 + D0_MenACWY_1)/4 , compare_ChAdOx_vs_MENACWY_CT_PCRpos = (CT_ChAdOx1_1) -(CT_MenACWY_1), compare_ChAdOx_vs_MENACWY_CT7_PCRpos = (CTplus7_ChAdOx1_1) -(CTplus7_MenACWY_1),compare_PCRpos_vs_PCRneg_CT7 = (CTplus7_ChAdOx1_1 + CTplus7_MenACWY_1)/2 - (CTplus7_ChAdOx1_0 + CTplus7_MenACWY_0)/2,compare_PCRposChAdOx1_vs_PCRneg_CT7 = (CTplus7_ChAdOx1_1 ) - (CTplus7_ChAdOx1_0 + CTplus7_MenACWY_0)/2,compare_PCRposMenACWY_vs_PCRneg_CT7 = (CTplus7_MenACWY_1 ) - (CTplus7_ChAdOx1_0 + CTplus7_MenACWY_0)/2 , levels=sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins$design_group )


vfit_grp <- contrasts.fit(vfit_grp, contrasts=symp_contrast)
efit_grp <- eBayes(vfit_grp)

dt_grp <- decideTests(efit_grp)

# summary(dt_grp)


# for (i in colnames(symp_contrast))
# {
#   write.table(topTable(efit_grp, coef=i, sort.by="P", adjust='fdr', number=nrow(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom)), paste0(here::here("BRC_COVID_omic_pilot"),"/", i,"_Table_of_collapsed_gene_results_STAR_HTSeq_limma_paired_grch38_", Sys.Date(),".txt"), col.names=TRUE,row.names=FALSE,sep="\t",quote=FALSE)
# }


# 2b) Volcano plots ----
# 
# 



for (i in colnames(efit_grp$coefficients)) {
  pq = as.data.frame(topTable(efit_grp, coef=i, sort.by="P", adjust='fdr', number=nrow(sd2_star_HTSeq_autosomes.filtered.remove.rRNA.globins.voom)))
  #rownames(pq) <- get(i)$gene_id
  p.cut =0.05
  lfc.cut = 0
  vFC = lfc.cut
  pq$col = ifelse (pq$adj.P.Val < p.cut & pq$logFC > lfc.cut, "1", ifelse(pq$adj.P.Val < p.cut & pq$logFC < -lfc.cut, "2" ,"3"))
  pq$alpha = ifelse (pq$col == 1 | pq$col == 2, 1, 0.5)
  x_title         <- c( expression("log" [2]*" FC"))
  y_title         <- c(expression("-log"[10]*" (p-value)"))
  xlims = max(abs(pq$logFC)) +1
  volc = ggplot(data = pq, aes(logFC, -log10(P.Value), color = col)) +
    geom_point(size = 2, show.legend = F) + 
    scale_color_manual(values = c("1" = "red", "2" = "blue", "3" = "grey")) + 
    geom_vline(xintercept = c(-vFC, vFC), lty=3) + 
    xlim(-8, 8) + 
    ylim(0, 12) + 
    labs(title = gsub("D1_","D1_vs_", i)) + 
    xlab(x_title) + 
    ylab(y_title) + 
    theme(axis.text=element_text(color = "black", size = 15), axis.title=element_text(size=18, face="plain"), plot.title=element_text(size = 14,face="bold"),  panel.border = element_rect(fill="NA", colour = "black", size = 0.5), axis.line = element_blank(), axis.ticks = element_line(color="black", size = 0.5), panel.background = element_rect(fill='white', colour='black')) +
    geom_text_repel(data=head(pq, 20), aes(label=external_gene_name), show.legend = FALSE) #+ coord_fixed(ratio = 0.4)
  ggsave( paste0(here::here("BRC_COVID_omic_pilot"),"/","Fixed_axis_Volcano_",i,".png"), plot=volc, height = 7, width = 5)
}
